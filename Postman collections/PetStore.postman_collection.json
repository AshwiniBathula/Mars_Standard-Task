{
	"info": {
		"_postman_id": "467b4b32-a697-43d1-b04a-e981a16fbfd7",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get",
			"item": [
				{
					"name": "Get pets by sold status ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7721907b-9650-4aa3-b7e2-d7441e5dfdd4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code name has OK\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sold\");",
									"});",
									"pm.test(\"Body is correct\", function () {",
									"    pm.response.to.have.property(\"id\");",
									"    //pm.response.to.have.property(\"name\");",
									"   // pm.response.to.have.property(\"photoUrls\");",
									"    //pm.response.to.have.property('status',sold);",
									"",
									"});",
									"    pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.pets.pet[0].status).to.eql(\"sold\");//pm.response.to.have.property(\"tags\");",
									"});",
									"",
									"",
									"var jsonObject = xml2Json(responseBody);",
									"console.log(jsonObject);",
									"console.log(jsonObject.length);",
									"",
									"pm.test(\"contains status sold\", function () {",
									"    pm.expect(jsonObject.pets.pet[1].status).to.eql(\"sold\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml, application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/findByStatus?status=sold",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get pet by tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml, application/json"
							}
						],
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/findByTags?tags=tag1",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"findByTags"
							],
							"query": [
								{
									"key": "tags",
									"value": "tag1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get pet by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml, application/json"
							}
						],
						"url": {
							"raw": "https://petstore.swagger.io/v2/pet/1",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"pet",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "place an order for pet-post req",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/xml, application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"petId\": 0,\r\n  \"quantity\": 0,\r\n  \"shipDate\": \"2019-05-23T05:57:28.673Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": false\r\n}"
						},
						"url": {
							"raw": "https://petstore.swagger.io/v2/store/order",
							"protocol": "https",
							"host": [
								"petstore",
								"swagger",
								"io"
							],
							"path": [
								"v2",
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "{{Url}}api/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9f3d32a7-13ea-4aa5-942a-8ff6cf198887",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
									"});",
									"",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Ashwini\");",
									"});",
									"",
									"",
									"",
									"pm.test(\"Resopnse has a property page\"),function(){",
									"    pm.response.to.have.property('id');",
									"}",
									"",
									"var jsonData = pm.response.json();",
									"var schema = {",
									"  \"definitions\": {}, ",
									"  \"$schema\": \"http://json-schema.org/draft-07/schema#\", ",
									"  \"$id\": \"http://example.com/root.json\", ",
									"  \"type\": \"object\", ",
									"  \"title\": \"The Root Schema\", ",
									"  \"description\": \"An explanation about the purpose of this instance.\", ",
									"  \"readOnly\": true, ",
									"  \"writeOnly\": false, ",
									"  \"required\": [",
									"    \"checked\", ",
									"    \"dimensions\", ",
									"    \"id\", ",
									"    \"name\", ",
									"    \"price\", ",
									"    \"tags\"",
									"  ], ",
									"  \"properties\": {",
									"    \"checked\": {",
									"      \"$id\": \"#/properties/checked\", ",
									"      \"type\": \"boolean\", ",
									"      \"title\": \"The Checked Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"default\": false, ",
									"      \"examples\": [",
									"        false",
									"      ], ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false",
									"    }, ",
									"    \"dimensions\": {",
									"      \"$id\": \"#/properties/dimensions\", ",
									"      \"type\": \"object\", ",
									"      \"title\": \"The Dimensions Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false, ",
									"      \"required\": [",
									"        \"width\", ",
									"        \"height\"",
									"      ], ",
									"      \"properties\": {",
									"        \"width\": {",
									"          \"$id\": \"#/properties/dimensions/properties/width\", ",
									"          \"type\": \"integer\", ",
									"          \"title\": \"The Width Schema\", ",
									"          \"description\": \"An explanation about the purpose of this instance.\", ",
									"          \"default\": 0, ",
									"          \"examples\": [",
									"            5",
									"          ], ",
									"          \"readOnly\": true, ",
									"          \"writeOnly\": false",
									"        }, ",
									"        \"height\": {",
									"          \"$id\": \"#/properties/dimensions/properties/height\", ",
									"          \"type\": \"integer\", ",
									"          \"title\": \"The Height Schema\", ",
									"          \"description\": \"An explanation about the purpose of this instance.\", ",
									"          \"default\": 0, ",
									"          \"examples\": [",
									"            10",
									"          ], ",
									"          \"readOnly\": true, ",
									"          \"writeOnly\": false",
									"        }",
									"      }",
									"    }, ",
									"    \"id\": {",
									"      \"$id\": \"#/properties/id\", ",
									"      \"type\": \"integer\", ",
									"      \"title\": \"The Id Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"default\": 0, ",
									"      \"examples\": [",
									"        1",
									"      ], ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false",
									"    }, ",
									"    \"name\": {",
									"      \"$id\": \"#/properties/name\", ",
									"      \"type\": \"string\", ",
									"      \"title\": \"The Name Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"default\": \"\", ",
									"      \"examples\": [",
									"        \"A green door\"",
									"      ], ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false, ",
									"      \"pattern\": \"^(.*)$\"",
									"    }, ",
									"    \"price\": {",
									"      \"$id\": \"#/properties/price\", ",
									"      \"type\": \"number\", ",
									"      \"title\": \"The Price Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"default\": 0.0, ",
									"      \"examples\": [",
									"        12.5",
									"      ], ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false",
									"    }, ",
									"    \"tags\": {",
									"      \"$id\": \"#/properties/tags\", ",
									"      \"type\": \"array\", ",
									"      \"title\": \"The Tags Schema\", ",
									"      \"description\": \"An explanation about the purpose of this instance.\", ",
									"      \"readOnly\": true, ",
									"      \"writeOnly\": false, ",
									"      \"items\": {",
									"        \"$id\": \"#/properties/tags/items\", ",
									"        \"type\": \"string\", ",
									"        \"title\": \"The Items Schema\", ",
									"        \"description\": \"An explanation about the purpose of this instance.\", ",
									"        \"default\": \"\", ",
									"        \"examples\": [",
									"          \"home\", ",
									"          \"green\"",
									"        ], ",
									"        \"readOnly\": true, ",
									"        \"writeOnly\": false, ",
									"        \"pattern\": \"^(.*)$\"",
									"      }",
									"    }",
									"  }",
									"};",
									"",
									"",
									"pm.test('Schema is valid', function() {",
									"  var result=tv4.validate(jsonData, schema);",
									"  console.log(result);",
									" // pm.expect(result).to.be.true;",
									"  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Ashwini\",\r\n    \"job\": \"Programmer\"\r\n}"
						},
						"url": {
							"raw": "{{Url}}api/users",
							"host": [
								"{{Url}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put",
			"item": []
		},
		{
			"name": "Delete",
			"item": []
		}
	]
}